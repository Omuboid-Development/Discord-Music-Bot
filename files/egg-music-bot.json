{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-04-02T15:51:32+02:00",
    "name": "MusicBot",
    "author": "prorene@outlook.de",
    "description": "Host your own Musicbot for Discord",
    "features": null,
    "docker_images": {
        "ghcr.io\/pterodactyl\/yolks:java_17": "ghcr.io\/pterodactyl\/yolks:java_17"
    },
    "file_denylist": [],
    "startup": "java -Dnogui=true -jar MusicBot.jar",
    "config": {
        "files": "{\r\n    \"config.txt\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"token=\": \"token={{server.build.env.BOT_TOKEN}}\",\r\n            \"activity=\": \"activity={{server.build.env.BOT_GAME}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"[BOT] Online\"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n## this is a simple script to use the github API for release versions.\r\n## this requires the egg has a variable for GITHUB_PACKAGE and VERSION\r\n## this supports using oauth\/personal access tokens via GITHUB_USER and GITHUB_OAUTH_TOKEN (both are required.)\r\n## if you are getting hit with GitHub API limit issues then you need to have the user and token set.\r\n\r\napt update\r\napt install -y jq curl\r\n\r\nGITHUB_PACKAGE=\"Omuboid-Development\/MusicBot-Discord\"\r\nCONFIG_LINK=\"https:\/\/raw.githubusercontent.com\/Omuboid-Development\/MusicBot-Discord\/master\/files\/config.txt\"\r\n\r\nif [ -z \"${GITHUB_USER}\" ] && [ -z \"${GITHUB_OAUTH_TOKEN}\" ] ; then\r\n    echo -e \"No Github user set. Using anonymous API call...\"\r\nelse\r\n    echo -e \"User and OAuth token set.\"\r\n    alias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '\r\nfi\r\n\r\n# get release info and download links\r\nLATEST_JSON=$(curl --silent \"https:\/\/api.github.com\/repos\/${GITHUB_PACKAGE}\/releases\/latest\")\r\nRELEASES=$(curl --silent \"https:\/\/api.github.com\/repos\/${GITHUB_PACKAGE}\/releases\")\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_LINK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i config)\r\n    else\r\n        echo -e \"Defaulting to the latest release.\"\r\n        DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\n    fi\r\nfi\r\n\r\n## JMusicBot Setup\r\n[ ! -d \/mnt\/server ] && mkdir \/mnt\/server\r\ncd \/mnt\/server\r\necho -e \"\\nInstalling\/Updating MusicBot...\\n\"\r\n\r\nif [ -f JMusicBot.jar ]; then\r\n    echo -e \"Updating MusicBot.jar to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"MusicBot.jar-old\")'\r\n    mv -f MusicBot.jar MusicBot.jar-old\r\nfi\r\necho -e \"Running: curl -sSLo MusicBot.jar ${DOWNLOAD_LINK}\\n\"\r\ncurl -sSLo MusicBot.jar ${DOWNLOAD_LINK}\r\n\r\nif [ -f config.txt ]; then\r\n    echo -e \"Updating config.txt to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"config.txt-old\")'\r\n    mv -f config.txt config.txt-old\r\nfi\r\necho -e \"Running: curl -sSLo config.txt ${CONFIG_LINK}\\n\"\r\ncurl -sSLo config.txt ${CONFIG_LINK}\r\n\r\necho -e \"\\nMusicBot Successfully Installed!\"",
            "container": "debian:buster-slim",
            "entrypoint": "\/bin\/bash"
        }
    },
    "variables": [
        {
            "name": "Discord Bot Token",
            "description": "You need to get a Token here: https:\/\/discord.com\/developers\/applications",
            "env_variable": "BOT_TOKEN",
            "default_value": "You need to get a token",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Bot Default Game",
            "description": "Set the Activity for the bot. Use %song% to show the current Song as an Activity",
            "env_variable": "BOT_GAME",
            "default_value": "%song%",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        }
    ]
}